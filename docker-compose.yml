services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: source_stream
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        env_file:
            - .env
        healthcheck:
            test: [ "CMD", "php", "artisan", "env" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        depends_on:
            mysql:
                condition: service_healthy
        command: >
            sh -c "php artisan migrate --force && php-fpm"
        networks:
            - laravel
    nginx:
        image: nginx:stable-alpine
        container_name: source_stream_nginx
        restart: unless-stopped
        ports:
            - "8197:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel
        depends_on:
            app:
              condition: service_healthy

    mysql:
        image: mysql:8.0
        container_name: source_stream_mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3307:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10
    scheduler:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: source_stream_scheduler
        restart: unless-stopped
        volumes:
            - .:/var/www/html
        command: >
            sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
        depends_on:
            app:
               condition: service_healthy
        networks:
            - laravel
networks:
    laravel:
        driver: bridge
volumes:
    mysql_data:
